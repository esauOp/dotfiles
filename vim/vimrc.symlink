set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

Bundle 'gmarik/vundle'    " Required
Bundle 'kien/ctrlp.vim'    " Required
Bundle 'mattn/emmet-vim'    " Required
Bundle 'scrooloose/nerdtree'    " Required
Bundle 'vim-syntastic/syntastic'    " Required
Bundle 'edkolev/tmuxline.vim'    " Required
Bundle 'vim-airline/vim-airline'    " Required
Bundle 'elixir-editors/vim-elixir'    " Required
Bundle 'tpope/vim-fugitive'    " Required
Bundle 'airblade/vim-gitgutter'    " Required
Bundle 'jistr/vim-nerdtree-tabs'    " Required

set encoding=utf-8
let base16colorspace=256  " Access colors present in 256 colorspace
set t_Co=256

filetype plugin indent on    " required

" size of a hard tabstop
set tabstop=4

" size of an "indent"
set shiftwidth=4

set expandtab

" a combination of spaces and tabs are used to simulate tab stops at a width
" other than the (hard)tabstop
set softtabstop=4

" To ignore plugin indent changes, instead use:
"filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this linie
set number
syntax enable
" colorscheme monokai
let g:molokai_original = 1
set background=dark

syntax on
filetype plugin indent on

" let g:airline#extensions#tmuxline#enabled = 0

set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
let g:syntastic_error_symbol='✗'
let g:syntastic_warning_symbol='⚠'

let g:user_emmet_leader_key='<C-Z>'

" Airline
'
let g:airline_powerline_fonts = 1

let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#left_sep = ' '
let g:airline#extensions#tabline#left_alt_sep = '|'

let g:airline_theme='badwolf'
set lazyredraw

" set guifont=Droid\ Sans\ Mono\ for\ Powerline\ Plus\ Nerd\ File\ Types:h11
" set guifont=Liberation_Mono_for_Powerline:h10

if !exists('g:airline_symbols')
  let g:airline_symbols = {}
endif
let g:airline_symbols.space = "\ua0"


" let g:airline_left_sep = '»'
let g:airline_left_sep = '❯'
" let g:airline_right_sep = '«'
let g:airline_right_sep = '❮'
" let g:airline_symbols.crypt = '🔒'
" let g:airline_symbols.linenr = '␊'
" let g:airline_symbols.linenr = '␤'
" let g:airline_symbols.linenr = '¶'
" let g:airline_symbols.branch = '⎇'
" let g:airline_symbols.paste = 'ρ'
" let g:airline_symbols.paste = 'Þ'
" let g:airline_symbols.paste = '∥'
" let g:airline_symbols.whitespace = 'Ξ'

let g:airline_left_sep = ''
let g:airline_left_alt_sep = ''
let g:airline_right_sep = ''
let g:airline_right_alt_sep = ''
let g:airline_symbols.branch = ''
let g:airline_symbols.readonly = ''
let g:airline_symbols.linenr = ''

" let g:airline_section_a = airline#section#create(['mode',' ','branch'])
set laststatus=2

map <C-n> :NERDTreeToggle<CR>
" let g:ctrlp_working_path_mode = 0

" set runtimepath^=~/.vim/bundle/ctrlp.vim


" Ident-Guides
let g:indentLine_color_term = 239
let g:indentLine_char = ''
let g:indentLine_enabled = 1

" set list lcs=tab:\.
set list lcs=tab:\▸\ ,eol:¬,trail:·,nbsp:·
hi SpecialKey cterm=NONE ctermfg=darkgrey gui=NONE guifg=#000066

let mapleader = ","

" The Silver Searcher
if executable('ag')
	" Use ag over grep
	set grepprg=ag\ --nogroup\ --nocolor

	" Use ag in CtrlP for listing files. Lightning fast and respects .gitignore
	let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'

	" ag is fast enough that CtrlP doesn't need to cache
	let g:ctrlp_use_caching = 0
endif

" bind K to grep word under cursor
nnoremap K :grep! "\b<C-R><C-W>\b"<CR>:cw<CR>

" bind \ (backward slash) to grep shortcut
command -nargs=+ -complete=file -bar Ag silent! grep! <args>|cwindow|redraw!

nnoremap \ :Ag<SPACE>
